[{"path":"/CONTRIBUTING.html","id":"contributing-to-vcfppr","dir":"","previous_headings":"","what":"Contributing to vcfppR","title":"NA","text":"Please see file Contributing details report issue: Minimally Complete () Verifiable Example (MCVE) helps lot; submit pull request: post issue first, get consensus ; follow (informal) coding style: simply files invent new style; nice NEWS.Rd","code":""},{"path":"/PULL_REQUEST_TEMPLATE.html","id":"pull-request-template-for-rcpp","dir":"","previous_headings":"","what":"Pull Request Template for Rcpp","title":"NA","text":"Please explain changes want apply Rcpp, preferably issue ticket create pull request. See file Contributing templates details.","code":""},{"path":"/PULL_REQUEST_TEMPLATE.html","id":"checklist","dir":"","previous_headings":"Pull Request Template for Rcpp","what":"Checklist","title":"NA","text":"Code compiles correctly R CMD check still passes tests Preferably, new tests added fail without change Document changes file ChangeLog","code":""},{"path":"/articles/concordance-of-two-vcf-files.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Assess the concordance between VCFs","text":"benchmarking, ’s often need calculate concordance rate test set truth set. truth VCF file, always true genotypes GT otherwise can’t validate test VCF. test VCF may variant caller genotype imputation program, format can variable, e.g GP, DS GT. Hence, article guides use vcfppR::vcfcomp function rapidly examine various statistics different scenarios formats, Pearson correlation genotyping (stats=“r2”), Non-Reference Concordance (stats=“nrc”), F1-score (stats=“f1”) Phasing Switch Error (stats=“pse”).","code":""},{"path":"/articles/concordance-of-two-vcf-files.html","id":"case-1-genotype-imputation-accuracy","dir":"Articles","previous_headings":"","what":"Case 1: Genotype imputation accuracy","title":"Assess the concordance between VCFs","text":"normally get genotype posterior GP genotype dosage DS diploid imputation software, eg QUILT GLIMPSE. examine imputation accuracy, calculate Pearson correlation imputed genotype dosage true genotypes. vcfcomp, need specify desired stats=\"r2\" formats=c(\"DS\",\"GT\"), extract respective FORMAT items testvcf truthvcf. Besides, QUILT2-nipt method outputs MDS FDS maternal fetal genotype dosages constract DS diploid mode. assess imputation accuracy maternal fetal, need specify corresponding formats. Note: absence DS format testvcf, one can either fill DS tag using vcf_addDS command line tool manipulate testvcf R using vcftable.","code":"vcfcomp(testvcf, truthvcf, formats = c(\"DS\", \"GT\"), stats = \"r2\") vcfcomp(testvcf, truthvcf, formats = c(\"MDS\", \"GT\"), stats = \"r2\") vcfcomp(testvcf, truthvcf, formats = c(\"FDS\", \"GT\"), stats = \"r2\")"},{"path":"/articles/concordance-of-two-vcf-files.html","id":"case-2-genotype-concordance","dir":"Articles","previous_headings":"","what":"Case 2: Genotype concordance","title":"Assess the concordance between VCFs","text":"case, interested called genotype concordance sensitivity / specificity genotype calling. contrast stats=\"r2\", choose stats=\"f1\" stats=\"nrc\" specify formats=c(\"GT\", \"GT\"). Normally, want results sample, can achieved using .sample=TRUE.","code":"vcfcomp(testvcf, truthvcf, formats = c(\"GT\",\"GT\"), stats=\"nrc\", by.sample=TRUE) vcfcomp(testvcf, truthvcf, formats = c(\"GT\",\"GT\"), stats=\"f1\", by.sample=TRUE)"},{"path":"/articles/concordance-of-two-vcf-files.html","id":"case-3-phasing-switch-error","dir":"Articles","previous_headings":"","what":"Case 3: Phasing switch error","title":"Assess the concordance between VCFs","text":"case, look functionality assess phasing switch error. First , need two VCF files contain phased GT, represented ‘|’. can choose return sites pse. Note: Currently, pse statatics simple form doesn’t take completeness quality account.","code":"vcfcomp(testvcf, truthvcf, stats=\"pse\", return_pse_sites=TRUE)"},{"path":"/articles/concordance-of-two-vcf-files.html","id":"case-4-multiple-testing-repetitively","dir":"Articles","previous_headings":"","what":"Case 4: Multiple testing repetitively","title":"Assess the concordance between VCFs","text":"comprehensive benchmarking, often run many tests true sets. scenario, can save truth RDS object reuse . Actually, test truth can take RDS file input. RDS file stores object returned vcftable.","code":"saveRDS(vcftable(truthvcf), \"truth.rds\") vcfcomp(test=testvcf1, truth=\"truth.rds\") vcfcomp(test=testvcf2, truth=\"truth.rds\") vcfcomp(test=testvcf3, truth=\"truth.rds\")"},{"path":"/articles/concordance-of-two-vcf-files.html","id":"qa-how-to-fix-the-error-inconsistent-samples-name","dir":"Articles","previous_headings":"","what":"Q&A: How to fix the error “inconsistent samples name”","title":"Assess the concordance between VCFs","text":"one certain samples name testvcf can replaced names can match samples truthvcf. One can use names option specify vector new names can found truthvcf.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zilong Li. Author, maintainer. Bonfield, James K Marshall, John Danecek, Petr Li, Heng Ohan, Valeriu Whitwham, Andrew Keane, Thomas Davies, Robert M. Copyright holder.            Authors included htslib library","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Li Z (2024). “vcfpp: C++ API rapid processing variant call format.” Bioinformatics, 40(2), btae049. ISSN 1367-4811, doi:10.1093/bioinformatics/btae049.","code":"@Article{,   title = {vcfpp: a C++ API for rapid processing of the variant call format},   author = {Zilong Li},   journal = {Bioinformatics},   volume = {40},   number = {2},   pages = {btae049},   year = {2024},   month = {01},   issn = {1367-4811},   abstract = {Given the widespread use of the variant call format (VCF/BCF) coupled with continuous surge in big data, there remains a perpetual demand for fast and flexible methods to manipulate these comprehensive formats across various programming languages.This work presents vcfpp, a C++ API of HTSlib in a single file, providing an intuitive interface to manipulate VCF/BCF files rapidly and safely, in addition to being portable. Moreover, this work introduces the vcfppR package to demonstrate the development of a high-performance R package with vcfpp, allowing for rapid and straightforward variants analyses.vcfpp is available from https://github.com/Zilong-Li/vcfpp under MIT license. vcfppR is available from https://cran.r-project.org/web/packages/vcfppR.},   doi = {10.1093/bioinformatics/btae049}, }"},{"path":"/index.html","id":"vcfppr-rapid-manipulation-of-the-vcfbcf-file","dir":"","previous_headings":"","what":"Rapid Manipulation of the Variant Call Format (VCF)","title":"Rapid Manipulation of the Variant Call Format (VCF)","text":"vcfppR package implements various powerful functions fast genomics analyses VCF/BCF files using C++ API vcfpp.h. Load/save content VCF/BCF R objects highly customizable options Visualize chracterize variants Compare two VCF/BCF files report various statistics Streaming read/write VCF/BCF files fine control everything Paper shows vcfppR 20x faster vcfR. Also, much faster cyvcf2","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Rapid Manipulation of the Variant Call Format (VCF)","text":"","code":"## install.package(\"vcfppR\") ## from CRAN remotes::install_github(\"Zilong-Li/vcfppR\") ## from latest github"},{"path":"/index.html","id":"cite-the-work","dir":"","previous_headings":"","what":"Cite the work","title":"Rapid Manipulation of the Variant Call Format (VCF)","text":"find useful, please cite paper","code":"library(vcfppR) citation(\"vcfppR\")"},{"path":"/index.html","id":"vcftable-read-vcf-as-tabular-data","dir":"","previous_headings":"","what":"vcftable: read VCF as tabular data","title":"Rapid Manipulation of the Variant Call Format (VCF)","text":"vcftable gives fine control want extract VCF/BCF files. Read SNP variants Read SNP variants PL format drop INFO column VCF/BCF Read INDEL variants DP format VCF/BCF","code":"library(vcfppR) vcffile <- \"https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000G_2504_high_coverage/working/20220422_3202_phased_SNV_INDEL_SV/1kGP_high_coverage_Illumina.chr21.filtered.SNV_INDEL_SV_phased_panel.vcf.gz\" res <- vcftable(vcffile, \"chr21:1-5100000\", vartype = \"snps\") str(res) vcffile <- \"https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000G_2504_high_coverage/working/20201028_3202_raw_GT_with_annot/20201028_CCDG_14151_B01_GRM_WGS_2020-08-05_chr21.recalibrated_variants.vcf.gz\" res <- vcftable(vcffile, \"chr21:1-5100000\", vartype = \"snps\", format = \"PL\", info = FALSE) str(res) vcffile <- \"https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000G_2504_high_coverage/working/20201028_3202_raw_GT_with_annot/20201028_CCDG_14151_B01_GRM_WGS_2020-08-05_chr21.recalibrated_variants.vcf.gz\" res <- vcftable(vcffile, \"chr21:1-5100000\", vartype = \"indels\", format = \"DP\") str(res)"},{"path":"/index.html","id":"vcfcomp-compare-two-vcf-files-and-report-concordance","dir":"","previous_headings":"","what":"vcfcomp: compare two VCF files and report concordance","title":"Rapid Manipulation of the Variant Call Format (VCF)","text":"Want investigate concordance two VCF files? vcfcomp utility function need! Genotype correlation Genotype F1 score Genotype Non-Reference Concordance","code":"vcffile <- \"https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000G_2504_high_coverage/working/20220422_3202_phased_SNV_INDEL_SV/1kGP_high_coverage_Illumina.chr21.filtered.SNV_INDEL_SV_phased_panel.vcf.gz\" res <- vcfcomp(test = vcffile, truth = vcffile, region = \"chr21:1-5100000\", stats = \"r2\", formats = c('GT','GT')) str(res) vcffile <- \"https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000G_2504_high_coverage/working/20220422_3202_phased_SNV_INDEL_SV/1kGP_high_coverage_Illumina.chr21.filtered.SNV_INDEL_SV_phased_panel.vcf.gz\" res <- vcfcomp(test = vcffile, truth = vcffile, region = \"chr21:1-5100000\", stats = \"f1\") str(res) vcffile <- \"https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000G_2504_high_coverage/working/20220422_3202_phased_SNV_INDEL_SV/1kGP_high_coverage_Illumina.chr21.filtered.SNV_INDEL_SV_phased_panel.vcf.gz\" res <- vcfcomp(test = vcffile, truth = vcffile, region = \"chr21:1-5100000\", stats = \"nrc\") str(res)"},{"path":"/index.html","id":"vcfsummary-variants-characterization","dir":"","previous_headings":"","what":"vcfsummary: variants characterization","title":"Rapid Manipulation of the Variant Call Format (VCF)","text":"Want summarize variants discovered genotype caller e.g. GATK? vcfsummary utility function need! Small variants Complex structure variants","code":"vcffile <- \"https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000G_2504_high_coverage/working/20201028_3202_raw_GT_with_annot/20201028_CCDG_14151_B01_GRM_WGS_2020-08-05_chr21.recalibrated_variants.vcf.gz\" region <- \"chr21:10000000-10010000\" res <- vcfsummary(vcffile, region) str(res) # get labels and do plottiing ped <- read.table(\"https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000G_2504_high_coverage/20130606_g1k_3202_samples_ped_population.txt\", h=T) ped <- ped[order(ped$Superpopulation),] out <- sapply(unique(ped$Superpopulation), function(pop) {   id <- subset(ped, Superpopulation == pop)[,\"SampleID\"]   ord <- match(id, res$samples)   res$SNP[ord] + res$INDEL[ord] })  boxplot(out, main = paste0(\"Average number of SNP & INDEL variants\\nin region \", region)) svfile <- \"https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000G_2504_high_coverage/working/20210124.SV_Illumina_Integration/1KGP_3202.gatksv_svtools_novelins.freeze_V3.wAF.vcf.gz\" sv <- vcfsummary(svfile, svtype = TRUE, region = \"chr20\") str(sv) allsvs <- sv$summary[-1] bar <- barplot(allsvs, ylim = c(0, 1.1*max(allsvs)),                main = \"Variant Counts on chr20 (all SVs)\")"},{"path":"/index.html","id":"api","dir":"","previous_headings":"","what":"API","title":"Rapid Manipulation of the Variant Call Format (VCF)","text":"two classes .e. vcfreader vcfwriter offering full R-bindings vcfpp.h. Check examples tests folder refer manual.","code":"?vcfppR::vcfreader"},{"path":"/reference/heterozygosity.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate the number of heterozygous SNPs for each sample — heterozygosity","title":"calculate the number of heterozygous SNPs for each sample — heterozygosity","text":"calculate number heterozygous SNPs sample","code":""},{"path":"/reference/heterozygosity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate the number of heterozygous SNPs for each sample — heterozygosity","text":"","code":"heterozygosity(vcffile, region = \"\", samples = \"-\", pass = FALSE, qual = 0)"},{"path":"/reference/heterozygosity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate the number of heterozygous SNPs for each sample — heterozygosity","text":"vcffile path VCF file index region region extract, default \"\" samples samples extract, default \"-\" pass restrict variants FILTER==PASS qual restrict variants QUAL > qual.","code":""},{"path":"/reference/heterozygosity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate the number of heterozygous SNPs for each sample — heterozygosity","text":"list heterozygosity couts sample along id vcf header","code":""},{"path":"/reference/vcfcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two VCF/BCF files reporting various statistics — vcfcomp","title":"Compare two VCF/BCF files reporting various statistics — vcfcomp","text":"Compare two VCF/BCF files reporting various statistics","code":""},{"path":"/reference/vcfcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two VCF/BCF files reporting various statistics — vcfcomp","text":"","code":"vcfcomp(   test,   truth,   formats = c(\"DS\", \"GT\"),   stats = \"r2\",   by.sample = FALSE,   by.variant = FALSE,   flip = FALSE,   names = NULL,   bins = NULL,   af = NULL,   out = NULL,   choose_random_start = FALSE,   return_pse_sites = FALSE,   ... )"},{"path":"/reference/vcfcomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two VCF/BCF files reporting various statistics — vcfcomp","text":"test path first VCF/BCF file referred test, saved RDS file. truth path second VCF/BCF file referred truth, saved RDS file. formats character vector. FORMAT tags extract test truth respectively. default c(\"DS\", \"GT\") extracts 'DS' target 'GT' truth. stats statistics calculated. supports following. \"r2\": pearson correlation coefficient ** 2. \"f1\": F1-score, good balance sensitivity precision. \"nrc\": Non-Reference Concordance rate \"pse\": Phasing Switch Error rate .sample logical. calculate concordance samples, average bins. .variant logical. calculate concordance variant, average bins. bysample variant TRUE, average samples first. bysample variant FALSE, average samples variants. flip logical. flip ref alt variants names character vector. reset samples' names test VCF. bins numeric vector. break statistics allele frequency bins. af file path allele frequency text file saved RDS file. output prefix saving objects RDS file choose_random_start choose random start stats=\"pse\" return_pse_sites boolean. return phasing switch error sites ... options passed vcftable","code":""},{"path":"/reference/vcfcomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two VCF/BCF files reporting various statistics — vcfcomp","text":"list various statistics","code":""},{"path":"/reference/vcfcomp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare two VCF/BCF files reporting various statistics — vcfcomp","text":"vcfcomp implements various statisitcs compare two VCF/BCF files, e.g. report genotype concocrdance, correlation stratified allele frequency.","code":""},{"path":"/reference/vcfcomp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare two VCF/BCF files reporting various statistics — vcfcomp","text":"Zilong Li zilong.dk@gmail.com","code":""},{"path":"/reference/vcfcomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two VCF/BCF files reporting various statistics — vcfcomp","text":"","code":"library('vcfppR') test <- system.file(\"extdata\", \"imputed.gt.vcf.gz\", package=\"vcfppR\") truth <- system.file(\"extdata\", \"imputed.gt.vcf.gz\", package=\"vcfppR\") samples <- \"HG00133,HG00143,HG00262\" res <- vcfcomp(test, truth, stats=\"f1\", format=c('GT','GT'), samples=samples) #> Warning: F1 should be used only for a sample with genotypes of all types, hom ref(0), het(1) and hom alt(2) str(res) #> List of 2 #>  $ samples: chr [1:3] \"HG00133\" \"HG00143\" \"HG00262\" #>  $ stats  : int [1:17, 1:3] 15 NA NA NA NA NA NA NA NA NA ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:17] \"[0,1e-05]\" \"(1e-05,2e-05]\" \"(2e-05,5e-05]\" \"(5e-05,0.0001]\" ... #>   .. ..$ : chr [1:3] \"n\" \"nA\" \"concordance\""},{"path":"/reference/vcfpopgen.html","id":null,"dir":"Reference","previous_headings":"","what":"count the heterozygous sites per sample in the VCF/BCF — vcfpopgen","title":"count the heterozygous sites per sample in the VCF/BCF — vcfpopgen","text":"count heterozygous sites per sample VCF/BCF","code":""},{"path":"/reference/vcfpopgen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count the heterozygous sites per sample in the VCF/BCF — vcfpopgen","text":"","code":"vcfpopgen(   vcffile,   region = \"\",   samples = \"-\",   pass = FALSE,   qual = 0,   fun = \"heterozygosity\" )"},{"path":"/reference/vcfpopgen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count the heterozygous sites per sample in the VCF/BCF — vcfpopgen","text":"vcffile path VCF/BCF file region region subset like bcftools samples samples subset like bcftools pass restrict variants FILTER==PASS qual restrict variants QUAL > qual. fun popgen function run. available functions \"heterozygosity\".","code":""},{"path":"/reference/vcfpopgen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count the heterozygous sites per sample in the VCF/BCF — vcfpopgen","text":"vcfpopgen list containing following components: samples : character vector;  samples ids VCF file subsetting hets : integer vector;  counts heterozygous sites sample order samples","code":""},{"path":"/reference/vcfpopgen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"count the heterozygous sites per sample in the VCF/BCF — vcfpopgen","text":"Zilong Li zilong.dk@gmail.com","code":""},{"path":"/reference/vcfpopgen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"count the heterozygous sites per sample in the VCF/BCF — vcfpopgen","text":"","code":"library('vcfppR') vcffile <- system.file(\"extdata\", \"raw.gt.vcf.gz\", package=\"vcfppR\") res <- vcfpopgen(vcffile) str(res) #> List of 2 #>  $ samples: chr [1:3202] \"HG00096\" \"HG00097\" \"HG00099\" \"HG00100\" ... #>  $ hets   : int [1:3202] 0 0 0 0 0 0 0 0 0 0 ..."},{"path":"/reference/vcfppR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vcfppR: Rapid Manipulation of the Variant Call Format (VCF) — vcfppR-package","title":"vcfppR: Rapid Manipulation of the Variant Call Format (VCF) — vcfppR-package","text":"'vcfpp.h' (https://github.com/Zilong-Li/vcfpp) provides easy--use 'C++' 'API' 'htslib', offering full functionality manipulating Variant Call Format (VCF) files. 'vcfppR' package serves R bindings 'vcfpp.h' library, enabling rapid processing compressed uncompressed VCF files. Explore range powerful features efficient VCF data manipulation.","code":""},{"path":[]},{"path":"/reference/vcfppR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vcfppR: Rapid Manipulation of the Variant Call Format (VCF) — vcfppR-package","text":"Maintainer: Zilong Li zilong.dk@gmail.com (ORCID) contributors: Bonfield, James K Marshall, John Danecek, Petr Li, Heng Ohan, Valeriu Whitwham, Andrew Keane, Thomas Davies, Robert M (Authors included htslib library) [copyright holder]","code":""},{"path":"/reference/vcfreader.html","id":null,"dir":"Reference","previous_headings":"","what":"API for manipulating the VCF/BCF. — vcfreader","title":"API for manipulating the VCF/BCF. — vcfreader","text":"Type name class see details methods","code":""},{"path":"/reference/vcfreader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"API for manipulating the VCF/BCF. — vcfreader","text":"C++ class following fields/methods manipulating VCF/BCF","code":""},{"path":"/reference/vcfreader.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"API for manipulating the VCF/BCF. — vcfreader","text":"new Constructor given vcf file Parameter: vcffile - path vcf file new Constructor given vcf file region Parameter: vcffile - path vcf file Parameter: region - region constrained new Constructor given vcf file, region samples Parameter: vcffile - path vcf file Parameter: region - region constrained Parameter: samples - samples constrained. Comma separated list samples include (exclude \"^\" prefix). variant Try get next variant record. return FALSE variants hit end file, otherwise TRUE. chr Return CHROM field current variant pos Return POS field current variant id Return CHROM field current variant ref Return REF field current variant alt Return ALT field current variant qual Return QUAL field current variant filter Return FILTER field current variant info Return INFO field current variant infoInt Return tag value integer type INFO field current variant Parameter: tag - tag name retrieve INFO infoFloat Return tag value float type INFO field current variant Parameter: tag - tag name retrieve INFO infoStr Return tag value string type INFO field current variant Parameter: tag - tag name retrieve INFO infoIntVec Return tag value vector integer type INFO field current variant Parameter: tag - tag name retrieve INFO infoFloatVec Return tag value vector float type INFO field current variant Parameter: tag - tag name retrieve INFO genotypes Return genotype values vector integers Parameter: collapse - Boolean value indicates wheather collapse size genotypes, eg, return diploid genotypes. formatInt Return tag value integer type sample FORAMT field current variant Parameter: tag - tag name retrieve FORAMT formatFloat Return tag value float type sample FORAMT field current variant Parameter: tag - tag name retrieve FORAMT formatStr Return tag value string type sample FORAMT field current variant Parameter: tag - tag name retrieve FORAMT isSNP Test current variant exculsively SNP isIndel Test current variant exculsively INDEL isSV Test current variant exculsively SV isMultiAllelics Test current variant exculsively Multi Allelics isMultiAllelicSNP Test current variant exculsively Multi Biallelics (SNPs) hasSNP Test current variant SNP hasINDEL Test current variant INDEL hasINS Test current variant INS hasDEL Test current variant DEL hasMNP Test current variant MNP hasBND Test current variant BND hasOTHER Test current variant hasOVERLAP Test current variant OVERLAP nsamples Return number samples samples Return vector samples id header Return raw string vcf header string Return raw string current variant including newline line Return raw string current variant without newline output Init output object streaming variants another vcf write Streaming current variant output vcf close Close connection output vcf setCHR Modify CHR current variant Parameter: s - string CHR setID Modify ID current variant Parameter: s - string ID setPOS Modify POS current variant Parameter: pos - integer POS setRefAlt Modify REF ALT current variant Parameter: s - string reperated comma setInfoInt Modify given tag INT type INFO current variant Parameter: tag - string tag name Parameter: v - integer tag value setInfoFloat Modify given tag FLOAT type INFO current variant Parameter: tag - string tag name Parameter: v - double tag value setInfoStr Modify given tag STRING type INFO current variant Parameter: tag - string tag name Parameter: s - string tag value setPhasing Modify phasing status sample Parameter: v - integer vector size number samples. 1s 0s valid. setGenotypes Modify genotypes current variant Parameter: v - integer vector genotypes. Use NA -9 missing value. setFormatInt Modify given tag INT type FORMAT current variant Parameter: tag - string tag name Parameter: v - integer tag value setFormatFloat Modify given tag FLOAT type FORMAT current variant Parameter: tag - string tag name Parameter: v - double tag value setFormatStr Modify given tag STRING type FORMAT current variant Parameter: tag - string tag name Parameter: s - string tag value rmInfoTag Remove given tag INFO current variant Parameter: s - string tag name rmFormatTag Remove given tag FORMAT current variant Parameter: s - string tag name setVariant Modify current variant adding vcf line Parameter: s - string one line VCF addINFO Add INFO header vcf Parameter: id - string tag name Parameter: number - string number Parameter: type - string type Parameter: desc - string description means addFORMAT Add FORMAT header vcf Parameter: id - string tag name Parameter: number - string number Parameter: type - string type Parameter: desc - string description means","code":""},{"path":"/reference/vcfreader.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"API for manipulating the VCF/BCF. — vcfreader","text":"","code":"vcffile <- system.file(\"extdata\", \"raw.gt.vcf.gz\", package=\"vcfppR\") br <- vcfreader$new(vcffile) res <- rep(0L, br$nsamples()) while(br$variant()) {   if(br$isSNP()) {   gt <- br$genotypes(TRUE) == 1   gt[is.na(gt)] <- FALSE   res <- res + gt   } }"},{"path":"/reference/vcfsummary.html","id":null,"dir":"Reference","previous_headings":"","what":"summarize the various variant types at both variant level and sample level. — vcfsummary","title":"summarize the various variant types at both variant level and sample level. — vcfsummary","text":"summarize various variant types variant level sample level.","code":""},{"path":"/reference/vcfsummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarize the various variant types at both variant level and sample level. — vcfsummary","text":"","code":"vcfsummary(   vcffile,   region = \"\",   samples = \"-\",   pass = FALSE,   qual = 0,   svtype = FALSE )"},{"path":"/reference/vcfsummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarize the various variant types at both variant level and sample level. — vcfsummary","text":"vcffile path VCF/BCF file region region subset like bcftools samples samples subset like bcftools pass restrict variants FILTER==PASS qual restrict variants QUAL > qual. svtype summarize variants SVTYPE","code":""},{"path":"/reference/vcfsummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summarize the various variant types at both variant level and sample level. — vcfsummary","text":"vcfsummary list containing following components: summary : named integer vector;  summarize counts variant type samples : character vector;  samples ids VCF file subsetting vartype : integer vector;  counts variant type sample level order samples","code":""},{"path":"/reference/vcfsummary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"summarize the various variant types at both variant level and sample level. — vcfsummary","text":"bcftools view -s \"id01,id02\" input.bcf.gz chr1:100000-20000","code":""},{"path":"/reference/vcfsummary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"summarize the various variant types at both variant level and sample level. — vcfsummary","text":"Zilong Li zilong.dk@gmail.com","code":""},{"path":"/reference/vcfsummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"summarize the various variant types at both variant level and sample level. — vcfsummary","text":"","code":"library('vcfppR') svfile <- system.file(\"extdata\", \"sv.vcf.gz\", package=\"vcfppR\") res <- vcfsummary(svfile, region = \"chr21:1-10000000\", svtype = TRUE) str(res) #> List of 10 #>  $ summary: Named int [1:10] 9 9 0 0 0 0 2 4 3 0 #>   ..- attr(*, \"names\")= chr [1:10] \"ALL\" \"SV\" \"BND\" \"CNV\" ... #>  $ samples: chr [1:3202] \"HG00096\" \"HG00097\" \"HG00099\" \"HG00100\" ... #>  $ BND    : int [1:3202] 0 0 0 0 0 0 0 0 0 0 ... #>  $ CNV    : int [1:3202] 0 0 0 0 0 0 0 0 0 0 ... #>  $ CPX    : int [1:3202] 0 0 0 0 0 0 0 0 0 0 ... #>  $ CTX    : int [1:3202] 0 0 0 0 0 0 0 0 0 0 ... #>  $ DEL    : int [1:3202] 0 0 0 0 0 0 0 0 0 0 ... #>  $ DUP    : int [1:3202] 0 1 0 0 0 0 0 0 0 0 ... #>  $ INS    : int [1:3202] 0 0 0 0 0 0 0 0 0 0 ... #>  $ INV    : int [1:3202] 0 0 0 0 0 0 0 0 0 0 ..."},{"path":"/reference/vcftable.html","id":null,"dir":"Reference","previous_headings":"","what":"read VCF/BCF contents into R data structure — vcftable","title":"read VCF/BCF contents into R data structure — vcftable","text":"swiss army knife reading VCF/BCF R data types rapidly easily.","code":""},{"path":"/reference/vcftable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read VCF/BCF contents into R data structure — vcftable","text":"","code":"vcftable(   vcffile,   region = \"\",   samples = \"-\",   vartype = \"all\",   format = \"GT\",   ids = NULL,   qual = 0,   pass = FALSE,   info = TRUE,   collapse = TRUE,   setid = FALSE,   mac = 0 )"},{"path":"/reference/vcftable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read VCF/BCF contents into R data structure — vcftable","text":"vcffile path VCF/BCF file region region subset bcftools-like style: \"chr1\", \"chr1:1-10000000\" samples samples subset bcftools-like style. comma separated list samples include (exclude \"^\" prefix). e.g. \"id01,id02\", \"^id01,id02\". vartype restrict specific type variants. supports \"snps\",\"indels\", \"sv\", \"multisnps\",\"multiallelics\" format FORMAT tag extract. default \"GT\" extracted. ids character vector. restrict sites ID given vector. default NULL filter sites. qual numeric. restrict variants QUAL > qual. pass logical. restrict variants FILTER = \"PASS\". info logical. drop INFO column returned list. collapse logical. acts FORMAT. FORMAT extract \"GT\", dim raw genotypes matrix diploid (M, 2 * N), M #markers N #samples. default TRUE collapse genotypes sample matrix (M, N). Set FALSE one wants maintain phasing order, e.g. \"1|0\" parsed c(1, 0) collapse=FALSE. FORMAT extract \"GT\", collapse=TRUE try turn list extracted vector matrix. However, raises issues one variant mutliallelic resulting vaules others. setid logical. reset ID column CHR_POS_REF_ALT. mac integer. restrict variants minor allele count higher value.","code":""},{"path":"/reference/vcftable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read VCF/BCF contents into R data structure — vcftable","text":"Return list containing following components: samples : character vector;  samples ids VCF file subsetting chr : character vector;  CHR column VCF file pos : character vector;  POS column VCF file id : character vector;  ID column VCF file ref : character vector;  REF column VCF file alt : character vector;  ALT column VCF file qual : character vector;  QUAL column VCF file filter : character vector;  FILTER column VCF file info : character vector;  INFO column VCF file format : matrix either integer numberic values depending tag extract;  specifiy tag FORMAT column extracted","code":""},{"path":"/reference/vcftable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"read VCF/BCF contents into R data structure — vcftable","text":"vcftable uses C++ API vcfpp, wrapper htslib, read VCF/BCF files. Thus, full functionalities htslib, restrict specific variant types, samples regions. memory efficiency reason, vcftable designed parse one tag time FORMAT column VCF. default, matrix genotypes, .e. \"GT\" tag, returned vcftable, many tags supported format option.","code":""},{"path":"/reference/vcftable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"read VCF/BCF contents into R data structure — vcftable","text":"Zilong Li zilong.dk@gmail.com","code":""},{"path":"/reference/vcftable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"read VCF/BCF contents into R data structure — vcftable","text":"","code":"library('vcfppR') vcffile <- system.file(\"extdata\", \"raw.gt.vcf.gz\", package=\"vcfppR\") res <- vcftable(vcffile, \"chr21:1-5050000\", vartype = \"snps\") str(res) #> List of 10 #>  $ samples: chr [1:3202] \"HG00096\" \"HG00097\" \"HG00099\" \"HG00100\" ... #>  $ chr    : chr [1:12] \"chr21\" \"chr21\" \"chr21\" \"chr21\" ... #>  $ pos    : int [1:12] 5030082 5030088 5030105 5030253 5030278 5030347 5030356 5030357 5030391 5030446 ... #>  $ id     : chr [1:12] \"chr21:5030082:G:A\" \"chr21:5030088:C:T\" \"chr21:5030105:C:A\" \"chr21:5030253:G:T\" ... #>  $ ref    : chr [1:12] \"G\" \"C\" \"C\" \"G\" ... #>  $ alt    : chr [1:12] \"A\" \"T\" \"A\" \"T\" ... #>  $ qual   : num [1:12] 70.1 2773.1 3897.8 102.6 868.9 ... #>  $ filter : chr [1:12] \"VQSRTrancheSNP99.80to100.00\" \"VQSRTrancheSNP99.80to100.00\" \"VQSRTrancheSNP99.80to100.00\" \"VQSRTrancheSNP99.80to100.00\" ... #>  $ info   : chr [1:12] \"AC=2;AF=0.000616523;AN=3244;DP=2498;FS=0;MLEAC=1;MLEAF=0.0003083;MQ=17.07;MQ0=0;QD=17.52;SOR=3.258;VQSLOD=-32.6\"| __truncated__ \"AC=127;AF=0.0400126;AN=3174;BaseQRankSum=0.736;ClippingRankSum=0.736;DP=2750;FS=0;InbreedingCoeff=0.0015;MLEAC=\"| __truncated__ \"AC=128;AF=0.0352811;AN=3628;BaseQRankSum=0.736;ClippingRankSum=0.727;DP=3476;FS=0;InbreedingCoeff=-0.0015;MLEAC\"| __truncated__ \"AC=1;AF=0.000165837;AN=6030;BaseQRankSum=-0.583;ClippingRankSum=-0.259;DP=19530;FS=0;InbreedingCoeff=-0.0274;ML\"| __truncated__ ... #>  $ gt     : int [1:12, 1:3202] NA 2 2 0 0 0 0 0 0 0 ..."},{"path":"/reference/vcfwriter.html","id":null,"dir":"Reference","previous_headings":"","what":"API for writing the VCF/BCF. — vcfwriter","title":"API for writing the VCF/BCF. — vcfwriter","text":"Type name class see details methods","code":""},{"path":"/reference/vcfwriter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"API for writing the VCF/BCF. — vcfwriter","text":"C++ class following fields/methods writing VCF/BCF","code":""},{"path":"/reference/vcfwriter.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"API for writing the VCF/BCF. — vcfwriter","text":"new Constructor given vcf file Parameter: vcffile - path vcf file. start \"~\" Parameter: version - version VCF specification addContig Add Contig header vcf Parameter: str - string CONTIG name addFILTER Add FILTER header vcf Parameter: id - string FILTER name Parameter: desc - string description means addINFO Add INFO header vcf Parameter: id - string tag name Parameter: number - string number Parameter: type - string type Parameter: desc - string description means addFORMAT Add FORMAT header vcf Parameter: id - string tag name Parameter: number - string number Parameter: type - string type Parameter: desc - string description means addSample Add SAMPLE header vcf Parameter: str - string SAMPLE name addLine Add line header vcf Parameter: str - string line header VCF writeline Write variant record given line Parameter: line - string line variant VCF. ended \"newline\" close Close save vcf file","code":""},{"path":"/reference/vcfwriter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"API for writing the VCF/BCF. — vcfwriter","text":"","code":"outvcf <- file.path(paste0(tempfile(), \".vcf.gz\")) bw <- vcfwriter$new(outvcf, \"VCF4.1\") bw$addContig(\"chr20\") bw$addFORMAT(\"GT\", \"1\", \"String\", \"Genotype\"); bw$addSample(\"NA12878\") s1 <- \"chr20\\t2006060\\t.\\tG\\tC\\t100\\tPASS\\t.\\tGT\\t1|0\" bw$writeline(s1) bw$close()"},{"path":"/news/index.html","id":"vcfppr-045","dir":"Changelog","previous_headings":"","what":"vcfppR 0.4.5","title":"vcfppR 0.4.5","text":"CRAN release: 2024-04-08 add vcfcomp function fix memory leaks pass ASAN check","code":""},{"path":"/news/index.html","id":"vcfppr-040","dir":"Changelog","previous_headings":"","what":"vcfppR 0.4.0","title":"vcfppR 0.4.0","text":"CRAN release: 2024-02-26 add setid option vcftable patches upcoming Rtools windows","code":""},{"path":"/news/index.html","id":"vcfppr-038","dir":"Changelog","previous_headings":"","what":"vcfppR 0.3.8","title":"vcfppR 0.3.8","text":"CRAN release: 2024-01-14 fix issues M1 Mac","code":""},{"path":"/news/index.html","id":"vcfppr-037","dir":"Changelog","previous_headings":"","what":"vcfppR 0.3.7","title":"vcfppR 0.3.7","text":"add vcfreader@rmFormatTag() add vcfreader@samples() vcftable supports vartype = ‘sv’","code":""},{"path":"/news/index.html","id":"vcfppr-036","dir":"Changelog","previous_headings":"","what":"vcfppR 0.3.6","title":"vcfppR 0.3.6","text":"add vcfreader::line remove vcfreader::setVariant bug fix setFormatStr units tests","code":""},{"path":"/news/index.html","id":"vcfppr-035","dir":"Changelog","previous_headings":"","what":"vcfppR 0.3.5","title":"vcfppR 0.3.5","text":"CRAN release: 2023-12-14 add vcfreader vcfwriter","code":""},{"path":"/news/index.html","id":"vcfppr-034","dir":"Changelog","previous_headings":"","what":"vcfppR 0.3.4","title":"vcfppR 0.3.4","text":"support filters variant ID","code":""},{"path":"/news/index.html","id":"vcfppr-033","dir":"Changelog","previous_headings":"","what":"vcfppR 0.3.3","title":"vcfppR 0.3.3","text":"use API vcfpp.h v0.3.1 set missing vaules FORMAT NA support filters QUAL, FILTER INFO","code":""},{"path":"/news/index.html","id":"vcfppr-030","dir":"Changelog","previous_headings":"","what":"vcfppR 0.3.0","title":"vcfppR 0.3.0","text":"First release using vcfpp.h v0.3.0 add vcftable function add vcfsummary function add vcfpopgen function","code":""}]
